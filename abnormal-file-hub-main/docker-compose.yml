version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: abnormal_file_hub_backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    environment:
      - DEBUG=0
      - DJANGO_SETTINGS_MODULE=abnormal_file_hub.settings
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:80,http://127.0.0.1:80
    depends_on:
      - db
    networks:
      - abnormal_file_hub_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: abnormal_file_hub_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost/api
    depends_on:
      - backend
    networks:
      - abnormal_file_hub_network

  db:
    image: postgres:15-alpine
    container_name: abnormal_file_hub_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=abnormal_file_hub
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - abnormal_file_hub_network

  nginx:
    image: nginx:alpine
    container_name: abnormal_file_hub_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    depends_on:
      - backend
      - frontend
    networks:
      - abnormal_file_hub_network

volumes:
  postgres_data:
  backend_static:
  backend_media:

networks:
  abnormal_file_hub_network:
    driver: bridge 